{"version":3,"sources":["copmonents/Form/Form.module.css","copmonents/Phonebook/Phonebook.module.css","copmonents/fade/fade.module.css","App.module.css","copmonents/Filter/Filter.module.css","copmonents/Logo/fadeLogo.module.css","copmonents/Phonebook/fadePhonebook.module.css","redux/contacts-types.js","redux/contacts-actions.js","redux/contacts-operations.js","redux/contacts-selectors.js","copmonents/Form/Form.js","copmonents/Phonebook/Phonebook.js","copmonents/Filter/Filter.js","copmonents/Logo/Logo.js","App.js","reportWebVitals.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","types","ADD","DELETE","DOUBLE_CONTACT","FILTER","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","operations","addContact","data","dispatch","contact","name","number","post","then","catch","error","deleteContact","id","delete","fetchContacts","get","getFilter","state","contacts","filter","getAllContacts","items","selectors","getVisibleContact","createSelector","allContacts","normalizedFilter","toLowerCase","toLocaleLowerCase","includes","Form","doubleContact","message","changeInput","event","currentTarget","value","setState","preventDefault","console","log","props","setTimeout","find","reset","onSubmit","this","CSSTransition","in","classNames","fadeStyle","timeout","unmountOnExit","className","s","alert","mainForm","inputName","type","onChange","inputNumber","React","Component","connect","contactsSelectors","contactsOperations","Phonebook","onDeleteContact","TransitionGroup","component","map","fadeStyles","conctact","button","onClick","e","target","length","inputFind","Logo","appear","fadeLogo","title","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createReducer","_","payload","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e9b3ee2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainForm\":\"Form_mainForm__2TgZl\",\"name\":\"Form_name__JxTQ8\",\"number\":\"Form_number__2L9jl\",\"inputName\":\"Form_inputName__5nheb\",\"inputNumber\":\"Form_inputNumber__2VQyO\",\"addContact\":\"Form_addContact__EpQuH\",\"alert\":\"Form_alert__35Kos\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Phonebook_contact__35NUF\",\"button\":\"Phonebook_button__gimrS\",\"name\":\"Phonebook_name__3UN9l\",\"number\":\"Phonebook_number__3V4Xf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__1sCkJ\",\"enterActive\":\"fade_enterActive__264cB\",\"exit\":\"fade_exit__1aEUM\",\"exitActive\":\"fade_exitActive__2VCsf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__37-9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"Filter_find__2oI3h\",\"inputFind\":\"Filter_inputFind__31oWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"fadeLogo_appear__3ZSFr\",\"appearActive\":\"fadeLogo_appearActive__36hSD\",\"title\":\"fadeLogo_title__3o6xT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadePhonebook_enter__FQlib\",\"enterActive\":\"fadePhonebook_enterActive__Gn8pp\",\"exit\":\"fadePhonebook_exit__EPkCp\",\"exitActive\":\"fadePhonebook_exitActive__1YdqF\"};","const types = {\r\n  ADD: \"contacts/add\",\r\n  DELETE: \"contacts/delete\",\r\n  DOUBLE_CONTACT: \"contacts/double\",\r\n  FILTER: \"contacts/filter\",\r\n};\r\n\r\nexport default types;\r\n","// import ids from \"short-id\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport types from \"./contacts-types\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\n// const addContact = createAction(types.ADD, (data) => {\r\n//   return {\r\n//     payload: {\r\n//       id: ids.generate(),\r\n//       name: data.name,\r\n//       number: data.number,\r\n//     },\r\n//   };\r\n// });\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n// export const deleteContact = createAction(types.DELETE);\r\n\r\nexport const changeFilter = createAction(types.FILTER);\r\n\r\n// Без библиотеки Redux Toolkit:\r\n// const addContact = (data) => ({\r\n//   type: types.ADD,\r\n//   payload: {\r\n//     id: ids.generate(),\r\n//     name: data.name,\r\n//     number: data.number,\r\n//   },\r\n// });\r\n\r\n// const deleteContact = (contactId) => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// const filter = (value) => ({\r\n//   type: types.FILTER,\r\n//   payload: value,\r\n// });\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error)));\r\n};\r\n\r\nconst addContact = (data) => (dispatch) => {\r\n  const contact = {\r\n    name: data.name,\r\n    number: data.number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nconst operations = {\r\n  addContact,\r\n  deleteContact,\r\n  fetchContacts,\r\n};\r\n\r\nexport default operations;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContact = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return allContacts.filter((contact) =>\r\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\nconst selectors = {\r\n  getVisibleContact,\r\n  getFilter,\r\n  getAllContacts,\r\n};\r\n\r\nexport default selectors;\r\n","import React from \"react\";\r\nimport s from \"./Form.module.css\";\r\nimport contactsOperations from \"../../redux/contacts-operations\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport fadeStyle from \"../fade/fade.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { contactsSelectors } from \"../../redux\";\r\n\r\nclass Form extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    doubleContact: false,\r\n    message: \"\",\r\n  };\r\n\r\n  changeInput = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  addContact = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.name === \"\" && this.state.number === \"\") {\r\n      this.setState({\r\n        message: \"Введите имя и номер контакта\",\r\n        doubleContact: true,\r\n      });\r\n      console.log(this.props.contacts);\r\n      setTimeout(\r\n        () => this.setState({ message: \"\", doubleContact: false }),\r\n        3000\r\n      );\r\n      return;\r\n    }\r\n    if (this.props.contacts.find(({ name }) => name === this.state.name)) {\r\n      this.setState({\r\n        message: `Контакт с именем ${this.state.name} уже существует`,\r\n        doubleContact: true,\r\n      });\r\n      setTimeout(\r\n        () => {\r\n          this.setState({ message: \"\", doubleContact: false });\r\n          this.reset();\r\n        },\r\n\r\n        3000\r\n      );\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, doubleContact, message } = this.state;\r\n    return (\r\n      <div>\r\n        <CSSTransition\r\n          in={doubleContact}\r\n          classNames={fadeStyle}\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <p className={s.alert}>{message}</p>\r\n        </CSSTransition>\r\n\r\n        <form className={s.mainForm} onSubmit={this.addContact}>\r\n          <label className={s.name}>\r\n            Name{\" \"}\r\n            <input\r\n              className={s.inputName}\r\n              name=\"name\"\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.changeInput}\r\n            />\r\n          </label>\r\n          <label className={s.number}>\r\n            Number{\" \"}\r\n            <input\r\n              className={s.inputNumber}\r\n              name=\"number\"\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.changeInput}\r\n            />\r\n          </label>\r\n          <br></br>\r\n          <button className={s.addContact} type=\"submit\">\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (data) => dispatch(contactsOperations.addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport s from \"./Phonebook.module.css\";\r\nimport fadeStyles from \"./fadePhonebook.module.css\";\r\nimport { contactsOperations, contactsSelectors } from \"../../redux\";\r\n\r\nclass Phonebook extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, onDeleteContact } = this.props;\r\n\r\n    return (\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <CSSTransition classNames={fadeStyles} key={id} timeout={500}>\r\n            <li className={s.conctact}>\r\n              <p className={s.name}>{name}</p>\r\n              <p className={s.number}>{number}</p>\r\n              <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\n// function Phonebook({ contacts, onDeleteContact }) {\r\n//   return (\r\n//     <TransitionGroup component=\"ul\">\r\n//       {contacts.map(({ id, name, number }) => (\r\n//         <CSSTransition classNames={fadeStyles} key={id} timeout={500}>\r\n//           <li className={s.conctact}>\r\n//             <p className={s.name}>{name}</p>\r\n//             <p className={s.number}>{number}</p>\r\n//             <button className={s.button} onClick={() => onDeleteContact(id)}>\r\n//               Delete\r\n//             </button>\r\n//           </li>\r\n//         </CSSTransition>\r\n//       ))}\r\n//     </TransitionGroup>\r\n//   );\r\n// }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelectors.getVisibleContact(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport fadeStyle from \"../fade/fade.module.css\";\r\nimport { contactsSelectors, changeFilter } from \"../../redux\";\r\nconst Filter = ({ value, onChange, contacts }) => {\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={contacts.length > 1}\r\n        classNames={fadeStyle}\r\n        timeout={500}\r\n        unmountOnExit\r\n      >\r\n        <label className={s.find}>\r\n          Find number\r\n          <input\r\n            className={s.inputFind}\r\n            type=\"text\"\r\n            value={value}\r\n            onChange={onChange}\r\n          ></input>\r\n        </label>\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: contactsSelectors.getFilter(state),\r\n  contacts: contactsSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport fadeLogo from \"./fadeLogo.module.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      classNames={fadeLogo}\r\n      timeout={500}\r\n      unmountOnExit\r\n    >\r\n      <h2 className={fadeLogo.title}>Phonebook</h2>\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport Form from \"./copmonents/Form/Form\";\nimport Phonebook from \"./copmonents/Phonebook/Phonebook\";\nimport Filter from \"./copmonents/Filter/Filter\";\nimport Logo from \"./copmonents/Logo/Logo\";\n\nconst App = () => {\n  return (\n    <div className={s.App}>\n      <Logo />\n      <Form />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter />\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default App;\n\n// Local storage без библиотеки Redux Toolkit\n// componentDidMount() {\n//   const parseContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n//   if (parseContacts.length !== 0) {\n//     this.setState({ contacts: parseContacts });\n//   } else {\n//     this.setState({\n//       contacts: [\n//         { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//         { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//         { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//         { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//       ],\n//     });\n//   }\n// }\n\n// componentDidUpdate(prevProps, prevState) {\n//   if (this.state.contacts !== prevState.contacts) {\n//     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//   }\n// }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./contacts-actions\";\r\n// import types from \"./contacts-types\";\r\n\r\nconst initionalState = [\r\n  // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer(initionalState, {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\n// Без библиотеки Redux Toolkit\r\n// const items = (\r\n//   state = [\r\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n//   ],\r\n//   { type, payload }\r\n// ) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER:\r\n//       return payload;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts-reducer\";\r\nimport {\r\n  // persistStore,\r\n  // persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\n// import storage from \"redux-persist/lib/storage\";\r\n\r\n// Без redux Toolkit:\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import { createStore, combineReducers } from \"redux\";\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n// const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n// });\r\n\r\n// Local storage с помощью redux-persist\r\n// const contactsPersistConfig = {\r\n//   key: \"contacts\",\r\n//   storage,\r\n//   blacklist: [\"filter\"],\r\n// };\r\n// const store = configureStore({\r\n//   reducer: {\r\n//     contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n//   },\r\n//   middleware,\r\n//   devTools: process.env.NODE_ENV === \"development\",\r\n// });\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\n// Асинхроный reducer\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// const persistor = persistStore(store);\r\n\r\n// const allStore = {\r\n//   store,\r\n//   persistor,\r\n// };\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}